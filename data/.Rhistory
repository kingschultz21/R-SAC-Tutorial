library(plyr)
library(dplyr)
library(spdep)
library(GISTools)
library(raster)
library(maptools)
library(rgdal)
library(tmap)
library(BAMMtools)
library(plyr)
library(dplyr)
library(spdep)
library(GISTools)
library(raster)
library(maptools)
library(rgdal)
library(tmap)
library(BAMMtools)
#######################
dir <- "/home/connor/schoolwork_2020/first_semester/geog418/assignments/assignment3/Data/Data"
setwd(dir)
tracts <- readOGR(dsn = ".", layer = "Vic_Census")
crd.data <- merge(tracts, census.16, by = "GUID")
census.16 <- read.csv("./CensusTractData.csv")
#######################
dir <- "/home/connor/schoolwork_2020/first_semester/geog418/assignments/assignment3/Data/Data"
setwd(dir)
census.16 <- read.csv("./CensusTractData.csv")
crd.data <- merge(tracts, census.16, by = "GUID")
crd.data <- crd.data[!is.na(crd.data$MInc),]
class(crd.data)
summary(crd.data)
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
#######################
dir <- "/home/connor/schoolwork_2020/first_semester/geog418/assignments/assignment3/Data/Data"
setwd(dir)
tracts <- readOGR(dsn = ".", layer = "Vic_Census")
census.16 <- read.csv("./CensusTractData.csv")
crd.data <- merge(tracts, census.16, by = "GUID")
crd.data <- crd.data[!is.na(crd.data$MInc),]
class(crd.data)
summary(crd.data)
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "viridis", n = 6)
map_PopDens
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "civdis", n = 6)
map_PopDens
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "civdis", n = 6)
map_PopDens
########################
crd.nb <- poly2nb(crd.data)
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "cividis", n = 6)
map_PopDens
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "BuPu", n = 6)
map_PopDens
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "BuPu", n = 6)
map_PopDens
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "BuPu", n = 6)
map_PopDens
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "Spectral", n = 6)
map_PopDens
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "plasma", n = 6)
map_PopDens
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "inferno", n = 6)
map_PopDens
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
map_PopDens <- tm_shape(crd.data) +
tm_polygons(col = "MdInc",
title = "Median Income",
style = "jenks",
palette = "RdGy", n = 6)
map_PopDens
########################
tmaptools::palette_explorer() #Tool for selecting pallettes
########################
crd.nb <- poly2nb(crd.data)
crd.net <- nb2lines(crd.nb,coords=coordinates(crd.data))
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_shape(crd.net) + tm_lines(col='red')
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_fill(col = 'lightgrey', alpha = 0.5)
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_fill(col = 'lightgrey', alpha = 0.5)+
tm_shape(crd.net) + tm_lines(col='red')
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_fill(col = 'lightgrey', alpha = 0.9)+
tm_shape(crd.net) + tm_lines(col='red')
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_fill(col = 'lightgrey', alpha = 0.1)+
tm_shape(crd.net) + tm_lines(col='red')
tm_shape(crd.data) + tm_borders(col='grey') +
tm_fill(col = 'lightgrey', alpha = 0.1)+
tm_shape(crd.net) + tm_lines(col='red')
crd.nb2 <- poly2nb(crd.data, queen = FALSE)
crd.net2 <- nb2lines(crd.nb2,coords=coordinates(crd.data))
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_shape(crd.net) + tm_lines(col='blue', lwd = 2) +
tm_shape(crd.net2) + tm_lines(col='yellow', lwd = 2)
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_shape(crd.net) + tm_lines(col='blue', lwd = 2)
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_shape(crd.net) + tm_lines(col='blue', lwd = 2)+
tm_shape(crd.net2) + tm_lines(col='yellow', lwd = 2)
crd.nb2 <- poly2nb(crd.data, queen = TRUE)
crd.net2 <- nb2lines(crd.nb2,coords=coordinates(crd.data))
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_shape(crd.net) + tm_lines(col='blue', lwd = 2)+
tm_shape(crd.net2) + tm_lines(col='yellow', lwd = 2)
crd.nb2 <- poly2nb(crd.data, queen = FALSE)
crd.net2 <- nb2lines(crd.nb2,coords=coordinates(crd.data))
tm_shape(crd.data) + tm_borders(col='lightgrey') +
tm_shape(crd.net) + tm_lines(col='blue', lwd = 2)+
tm_shape(crd.net2) + tm_lines(col='yellow', lwd = 2)
crd.lw <- nb2listw(crd.nb, zero.policy = TRUE, style = "W")
print.listw(crd.lw, zero.policy = TRUE)
########################
crd.data$IncLagMeans = lag.listw(crd.lw, crd.data$MdInc, zero.policy = TRUE)
map_LagMean <- tm_shape(crd.data) +
tm_polygons(col = "IncLagMeans",
title = "Median Income\nLagged Means",
style = "jenks",
palette = "viridis", n = 6)
map_LagMean
map_LagMean <- tm_shape(crd.data) +
tm_polygons(col = "IncLagMeans",
title = "Median Income\nLagged Means",
style = "jenks",
palette = "RdGy", n = 6)
map_LagMean
########################
mi <- moran.test(crd.data$MdInc, crd.lw, zero.policy = TRUE)
mi
moran.range <- function(lw) {
wmat <- listw2mat(lw)
return(range(eigen((wmat + t(wmat))/2)$values))
}
moran.range(crd.lw)
mI <- mi$estimate[[1]]
eI <- mi$estimate[[2]]
var <- mi$estimate[[3]]
z <-
########################
lisa.test <- localmoran(crd.data$MdInc, crd.lw)
mi$estimate[4]
mi$estimate[[4]]
estimate
mi
z <- (mI - eI) / (sqrt(var))
z
z_ass <- (1.45 - (-0.0084034)) / 0.75
print(z_ass)
lisa.test <- localmoran(crd.data$MdInc, crd.lw)
print(z_ass)
print(z_ass)
z_ass
z_ass <- (1.45 - (-0.0084034)) / 0.7
z_ass
z_ass <- (1.45 - (-0.0084034)) / 0.75
z_ass
z_ass <- (1.45 - (-0.0084034)) / 0.7
z_ass
z_ass <- (1.45 - (-1/(39))) / 0.7
z_ass
e_ass = -1/39
z_ass <- (1.45 - e_ass) / 0.7
z_ass
e_ass
z_ass <- (1.45 - e_ass) / 0.75
z_ass
z <- (mI - eI) / (sqrt(var))
z
